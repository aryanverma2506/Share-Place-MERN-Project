{"version":3,"file":"static/js/800.5c9aab5e.chunk.js","mappings":"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","sources":["webpack://client/./src/shared/components/FormElements/ImageUpload.module.css?d18b","shared/components/FormElements/ImageUpload.tsx","webpack://client/./src/shared/components/FormElements/Input.module.css?800c","shared/components/FormElements/Input.tsx","webpack://client/./src/shared/components/UIElements/Card.module.css?5bd3","shared/components/UIElements/Card.tsx","shared/hooks/useForm-hook.ts","shared/utils/validators.ts","webpack://client/./src/user/screens/Auth.module.css?67f8","user/screens/Auth.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"ImageUpload_form-control__S+NdZ\",\"image-upload\":\"ImageUpload_image-upload__CzPQI\",\"center\":\"ImageUpload_center__jXDTo\",\"image-upload__preview\":\"ImageUpload_image-upload__preview__+ww3b\"};","import React, { useEffect, useReducer, useRef } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport styles from \"./ImageUpload.module.css\";\r\n\r\ntype FileReducerState = {\r\n  file: File | undefined;\r\n  filePreviewUrl: string | ArrayBuffer | null;\r\n  isValid: boolean;\r\n};\r\n\r\ntype FileReducerAction = {\r\n  type: string;\r\n  file?: File | undefined;\r\n  filePreviewUrl?: string | ArrayBuffer | null;\r\n  isValid?: boolean;\r\n};\r\n\r\nfunction filePickerReducer(state: FileReducerState, action: FileReducerAction) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      return {\r\n        ...state,\r\n        file: action.file || state.file,\r\n        isValid: action.isValid || state.isValid,\r\n      };\r\n    case \"PREVIEW_FILE\":\r\n      return {\r\n        ...state,\r\n        filePreviewUrl: action.filePreviewUrl || state.filePreviewUrl,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface ImageUploadProps extends React.PropsWithChildren {\r\n  id: string;\r\n  errorText?: string;\r\n  center?: boolean;\r\n  onInput: (id: string, file: File | undefined, isValid: boolean) => void;\r\n}\r\n\r\nfunction ImageUpload(props: ImageUploadProps): React.ReactElement {\r\n  const [filePickerState, dispatchFilePicker] = useReducer(filePickerReducer, {\r\n    file: undefined,\r\n    filePreviewUrl: null,\r\n    isValid: false,\r\n  });\r\n  const filePickerRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (filePickerState.file) {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        dispatchFilePicker({\r\n          type: \"PREVIEW_FILE\",\r\n          filePreviewUrl: fileReader.result,\r\n        });\r\n      };\r\n      fileReader.readAsDataURL(filePickerState.file);\r\n    }\r\n  }, [filePickerState.file]);\r\n\r\n  function pickImageHandler(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    let pickedFile;\r\n    let fileIsValid = filePickerState.isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      dispatchFilePicker({\r\n        type: \"INPUT_CHANGE\",\r\n        file: pickedFile,\r\n        isValid: true,\r\n      });\r\n      fileIsValid = true;\r\n    } else {\r\n      dispatchFilePicker({\r\n        type: \"INPUT_CHANGE\",\r\n        file: undefined,\r\n        isValid: false,\r\n      });\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  }\r\n\r\n  function pickButtonHandler(): void {\r\n    filePickerRef.current?.click();\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles[\"form-control\"]}`}>\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".png, .jpg, .jpeg\"\r\n        onChange={pickImageHandler}\r\n      />\r\n      <div\r\n        className={`${styles[\"image-upload\"]} ${\r\n          props.center ? styles.center : \"\"\r\n        }`}\r\n      >\r\n        <div className={`${styles[\"image-upload__preview\"]}`}>\r\n          {filePickerState.filePreviewUrl && (\r\n            <img\r\n              src={filePickerState.filePreviewUrl.toString()}\r\n              alt=\"Preview\"\r\n            />\r\n          )}\r\n          {!filePickerState.filePreviewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickButtonHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n        {!filePickerState.isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"Input_form-control__4leYh\",\"form-control--invalid\":\"Input_form-control--invalid__JOT1a\"};","import React, { useEffect, useReducer } from \"react\";\r\n\r\nimport validate, { ValidatorType } from \"../../utils/validators\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nfunction inputReducer(\r\n  state: {\r\n    step: number;\r\n    value: string;\r\n    isValid: boolean;\r\n    isTouched: boolean;\r\n  },\r\n  action: {\r\n    type: string;\r\n    step?: number;\r\n    value?: string;\r\n    validators?: { type: ValidatorType; value: string }[];\r\n  }\r\n) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        step: action.step || state.step,\r\n        value: action.value || \"\",\r\n        isValid: validate(action.value || \"\", action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface InputProps {\r\n  id: string;\r\n  type: string;\r\n  label: string;\r\n  errorText: string;\r\n  initialValid?: boolean;\r\n  initialValue?: string | number;\r\n  validators?: { type: ValidatorType; value: string }[];\r\n  rows?: number;\r\n  min?: number;\r\n  max?: number;\r\n  placeholder?: string;\r\n  onInput?: (a: string, b: string, c: boolean) => void;\r\n}\r\n\r\nfunction Input(props: InputProps): React.ReactElement {\r\n  const [inputState, dispatchInputState] = useReducer(inputReducer, {\r\n    step: 1,\r\n    value: props.initialValue?.toString() || \"\",\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (onInput) {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  function changeHandler(\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ): void {\r\n    if (event.target.type === \"number\") {\r\n      let inputStepValue = 1;\r\n      if (Number.isInteger(parseFloat(event.target.value))) {\r\n        inputStepValue = 1;\r\n      } else if (event.target.value.trim().length !== 0) {\r\n        const decimalPlaces = (event.target.value.split(\".\")[1] || \"\").length;\r\n        inputStepValue = parseFloat(`0.${\"0\".repeat(decimalPlaces - 1)}1`);\r\n      }\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        step: inputStepValue,\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    } else {\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    }\r\n  }\r\n\r\n  function touchHandler(): void {\r\n    dispatchInputState({\r\n      type: \"TOUCH\",\r\n    });\r\n  }\r\n\r\n  const inputElement =\r\n    props.type === \"textarea\" ? (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        min={props.min}\r\n        max={props.max}\r\n        step={props.type === \"number\" ? inputState.step : undefined}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`${styles[\"form-control\"]} ${\r\n        !inputState.isValid && inputState.isTouched\r\n          ? styles[\"form-control--invalid\"]\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {inputElement}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__1-V8Z\"};","import React from \"react\";\r\n\r\nimport styles from \"./Card.module.css\";\r\n\r\ninterface CardProps extends React.PropsWithChildren {\r\n  className?: string;\r\n  style?: Object;\r\n}\r\n\r\nfunction Card(props: CardProps): React.ReactElement {\r\n  return (\r\n    <div className={`${styles.card} ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\ntype InitialInputs = {\r\n  [key: string]: {\r\n    value: string | File | null;\r\n    isValid: boolean;\r\n  };\r\n};\r\n\r\ntype FormReducerState = {\r\n  inputs: InitialInputs;\r\n  isValid: boolean;\r\n};\r\n\r\ntype FormReducerAction = {\r\n  type: string;\r\n  isValid: boolean;\r\n  value?: string | File;\r\n  inputId?: string;\r\n  inputs?: InitialInputs;\r\n};\r\n\r\ntype InputHandlerFunction = (\r\n  id: string,\r\n  value: string | File | undefined,\r\n  isValid: boolean\r\n) => void;\r\n\r\ntype SetFormDataFunction = (\r\n  inputData: InitialInputs,\r\n  formValidity: boolean\r\n) => void;\r\n\r\nfunction formReducer(state: FormReducerState, action: FormReducerAction) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      if (action.inputId) {\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: {\r\n              value: action.value ?? state.inputs[action.inputId].value,\r\n              isValid: action.isValid,\r\n            },\r\n          },\r\n          isValid: formIsValid,\r\n        };\r\n      }\r\n      break;\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs || state.inputs,\r\n        isValid: action.isValid || state.isValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\n\r\nexport function useForm(\r\n  initialInputs: InitialInputs,\r\n  initialFormValidity?: boolean\r\n): [FormReducerState, InputHandlerFunction, SetFormDataFunction] {\r\n  const [formState, dispatchFormState] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity || false,\r\n  });\r\n\r\n  const inputHandler: InputHandlerFunction = useCallback(\r\n    (id, value, isValid) => {\r\n      dispatchFormState({\r\n        type: \"INPUT_CHANGE\",\r\n        inputId: id,\r\n        value: value,\r\n        isValid: isValid,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const setFormData: SetFormDataFunction = useCallback(\r\n    (inputData, formValidity) => {\r\n      dispatchFormState({\r\n        type: \"SET_DATA\",\r\n        inputs: inputData,\r\n        isValid: formValidity,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","export enum ValidatorType {\r\n  REQUIRE = \"REQUIRE\",\r\n  NUMBER = \"NUMBER\",\r\n  MIN_LENGTH = \"MIN_LENGTH\",\r\n  MAX_LENGTH = \"MAX_lENGTH\",\r\n  MIN = \"MIN\",\r\n  MAX = \"MAX\",\r\n  EMAIL = \"EMAIL\",\r\n  FILE = \"FILE\",\r\n}\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({\r\n  type: ValidatorType.REQUIRE,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_NUMBER = () => ({\r\n  type: ValidatorType.NUMBER,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_MIN_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MIN_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MAX_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MIN = (value: string | number) => ({\r\n  type: ValidatorType.MIN,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX = (value: string | number) => ({\r\n  type: ValidatorType.MAX,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_EMAIL = () => ({ type: ValidatorType.EMAIL, value: \"\" });\r\nexport const VALIDATOR_FILE = () => ({ type: ValidatorType.FILE, value: \"\" });\r\n\r\nexport default function validate(\r\n  value: string,\r\n  validators?: { type: ValidatorType; value: string | number }[]\r\n): boolean {\r\n  let isValid = true;\r\n  if (validators) {\r\n    for (const validator of validators) {\r\n      if (validator.type === ValidatorType.REQUIRE) {\r\n        isValid = isValid && value.trim().length > 0;\r\n      }\r\n      if (validator.type === ValidatorType.NUMBER) {\r\n        isValid = isValid && typeof +value.trim() === \"number\";\r\n      }\r\n      if (validator.type === ValidatorType.MIN_LENGTH) {\r\n        isValid = isValid && value.trim().length >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX_LENGTH) {\r\n        isValid = isValid && value.trim().length <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MIN) {\r\n        isValid = isValid && +value >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX) {\r\n        isValid = isValid && +value <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.EMAIL) {\r\n        isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n      }\r\n    }\r\n  }\r\n  return isValid;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"authentication__header\":\"Auth_authentication__header__TVYMj\",\"authentication\":\"Auth_authentication__9Qqdi\"};","import React, { useContext, useState } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useForm } from \"../../shared/hooks/useForm-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MIN_LENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport {\r\n  AuthContext,\r\n  AuthContextType,\r\n} from \"../../shared/context/auth/auth-context\";\r\nimport styles from \"./Auth.module.css\";\r\n\r\ninterface ResponseUserData {\r\n  userId: string;\r\n  email: string;\r\n  token: string;\r\n}\r\n\r\nfunction Auth(): React.ReactElement {\r\n  const [isLoginMode, setIsLoginMode] = useState<boolean>(true);\r\n  const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n  const authCtx = useContext<AuthContextType>(AuthContext);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  function switchModeHandler(): void {\r\n    if (!isLoginMode) {\r\n      delete formState.inputs.image;\r\n      delete formState.inputs.name;\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevState) => !prevState);\r\n  }\r\n\r\n  async function authSubmitHandler(\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ): Promise<void> {\r\n    event.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest<ResponseUserData>({\r\n          url: `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n        });\r\n\r\n        console.log(responseData);\r\n        authCtx.login(responseData.userId, responseData.token, undefined);\r\n      } catch (error: any) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formState.inputs.name.value!);\r\n        formData.append(\"email\", formState.inputs.email.value!);\r\n        formData.append(\"password\", formState.inputs.password.value!);\r\n        formData.append(\"image\", formState.inputs.image.value!);\r\n        const responseData = await sendRequest<ResponseUserData>({\r\n          url: `${process.env.REACT_APP_SERVER_URL}/users/signup`,\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        console.log(responseData);\r\n        authCtx.login(responseData.userId, responseData.token, undefined);\r\n      } catch (error: any) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className={`${styles.authentication}`}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <>\r\n              <ImageUpload\r\n                id=\"image\"\r\n                center\r\n                onInput={inputHandler}\r\n                errorText=\"Please provide an image\"\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                label=\"Your Name\"\r\n                placeholder=\"Your Name\"\r\n                onInput={inputHandler}\r\n                errorText=\"Please enter a name.\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n              />\r\n            </>\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            label=\"E-mail\"\r\n            placeholder=\"E-mail\"\r\n            initialValue={formState.inputs.email.value?.toString()}\r\n            onInput={inputHandler}\r\n            errorText=\"Please enter a valid e-mail address.\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            initialValue={formState.inputs.password.value?.toString()}\r\n            onInput={inputHandler}\r\n            placeholder=\"Password\"\r\n            errorText=\"Please enter a valid password, at least 8 characters.\"\r\n            validators={[VALIDATOR_MIN_LENGTH(8)]}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGN UP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGN UP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["filePickerReducer","state","action","type","_objectSpread","file","isValid","filePreviewUrl","props","_useReducer","useReducer","undefined","_useReducer2","_slicedToArray","filePickerState","dispatchFilePicker","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","className","concat","styles","children","_jsx","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","toString","alt","Button","onClick","_filePickerRef$curren","current","click","errorText","inputReducer","step","value","validate","validators","isTouched","_props$initialValue","initialValue","initialValid","inputState","dispatchInputState","changeHandler","inputStepValue","Number","isInteger","parseFloat","trim","decimalPlaces","split","repeat","touchHandler","inputElement","rows","placeholder","onBlur","min","max","htmlFor","label","formReducer","_action$value","formIsValid","inputId","inputs","_defineProperty","useForm","initialInputs","initialFormValidity","formState","dispatchFormState","useCallback","inputData","formValidity","ValidatorType","VALIDATOR_REQUIRE","REQUIRE","VALIDATOR_NUMBER","NUMBER","VALIDATOR_MIN_LENGTH","MIN_LENGTH","VALIDATOR_MIN","MIN","VALIDATOR_MAX","MAX","VALIDATOR_EMAIL","EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","MAX_LENGTH","test","err","e","f","_formState$inputs$ema","_formState$inputs$pas","_useState","useState","_useState2","isLoginMode","setIsLoginMode","_useHttpClient","useHttpClient","error","isLoading","sendRequest","clearError","authCtx","useContext","AuthContext","_useForm","email","password","_useForm2","inputHandler","setFormData","_authSubmitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","formData","_responseData","wrap","_context","prev","next","preventDefault","url","process","method","headers","body","JSON","stringify","sent","console","log","login","userId","token","t0","FormData","append","name","image","t1","stop","apply","arguments","_Fragment","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","_x","ImageUpload","Input","disabled","inverse","prevState"],"sourceRoot":""}