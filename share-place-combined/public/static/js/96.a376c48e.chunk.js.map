{"version":3,"file":"static/js/96.a376c48e.chunk.js","mappings":"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","sources":["places/screens/NewPlace.tsx","webpack://client/./src/shared/components/FormElements/ImageUpload.module.css?d18b","shared/components/FormElements/ImageUpload.tsx","webpack://client/./src/shared/components/FormElements/Input.module.css?800c","shared/components/FormElements/Input.tsx","shared/hooks/useForm-hook.ts","shared/utils/validators.ts","webpack://client/./src/places/screens/PlaceForm.module.css?b34f"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_MAX,\r\n  VALIDATOR_MIN,\r\n  VALIDATOR_MIN_LENGTH,\r\n  VALIDATOR_NUMBER,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport { useForm } from \"../../shared/hooks/useForm-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient-hook\";\r\nimport {\r\n  AuthContext,\r\n  AuthContextType,\r\n} from \"../../shared/context/auth/auth-context\";\r\nimport styles from \"./PlaceForm.module.css\";\r\n\r\nfunction NewPlace(): React.ReactElement {\r\n  const authCtx = useContext<AuthContextType>(AuthContext);\r\n  const navigate = useNavigate();\r\n  const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      latitude: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      longitude: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  async function placeSubmitHandler(\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ): Promise<void> {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", formState.inputs.image.value!);\r\n      formData.append(\"title\", formState.inputs.title.value!);\r\n      formData.append(\"address\", formState.inputs.address.value!);\r\n      formData.append(\"description\", formState.inputs.description.value!);\r\n      formData.append(\"latitude\", formState.inputs.latitude.value!);\r\n      formData.append(\"longitude\", formState.inputs.longitude.value!);\r\n      await sendRequest({\r\n        url: `${process.env.REACT_APP_SERVER_URL}/places/`,\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + authCtx.token,\r\n        },\r\n        body: formData,\r\n      });\r\n      navigate(\"/\");\r\n    } catch (error: any) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <form className={`${styles[\"place-form\"]}`} onSubmit={placeSubmitHandler}>\r\n        <ImageUpload\r\n          id=\"image\"\r\n          center\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image\"\r\n        />\r\n        <Input\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          label=\"Address\"\r\n          type=\"textarea\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_MIN_LENGTH(5)]}\r\n          errorText=\"Please enter a valid address.\"\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          type=\"textarea\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_MIN_LENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n        />\r\n        <Input\r\n          id=\"latitude\"\r\n          label=\"Latitude\"\r\n          type=\"number\"\r\n          min={-91}\r\n          max={90}\r\n          onInput={inputHandler}\r\n          validators={[\r\n            VALIDATOR_REQUIRE(),\r\n            VALIDATOR_NUMBER(),\r\n            VALIDATOR_MIN(-91),\r\n            VALIDATOR_MAX(90),\r\n          ]}\r\n          errorText=\"Latitude should be between -90 to 90 degrees.\"\r\n        />\r\n        <Input\r\n          id=\"longitude\"\r\n          label=\"Longitude\"\r\n          type=\"number\"\r\n          min={-181}\r\n          max={180}\r\n          onInput={inputHandler}\r\n          validators={[\r\n            VALIDATOR_REQUIRE(),\r\n            VALIDATOR_NUMBER(),\r\n            VALIDATOR_MIN(-181),\r\n            VALIDATOR_MAX(180),\r\n          ]}\r\n          errorText=\"Longitude should be between -180 to 180 degrees.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPlace;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"ImageUpload_form-control__S+NdZ\",\"image-upload\":\"ImageUpload_image-upload__CzPQI\",\"center\":\"ImageUpload_center__jXDTo\",\"image-upload__preview\":\"ImageUpload_image-upload__preview__+ww3b\"};","import React, { useEffect, useReducer, useRef } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport styles from \"./ImageUpload.module.css\";\r\n\r\ntype FileReducerState = {\r\n  file: File | undefined;\r\n  filePreviewUrl: string | ArrayBuffer | null;\r\n  isValid: boolean;\r\n};\r\n\r\ntype FileReducerAction = {\r\n  type: string;\r\n  file?: File | undefined;\r\n  filePreviewUrl?: string | ArrayBuffer | null;\r\n  isValid?: boolean;\r\n};\r\n\r\nfunction filePickerReducer(state: FileReducerState, action: FileReducerAction) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      return {\r\n        ...state,\r\n        file: action.file || state.file,\r\n        isValid: action.isValid || state.isValid,\r\n      };\r\n    case \"PREVIEW_FILE\":\r\n      return {\r\n        ...state,\r\n        filePreviewUrl: action.filePreviewUrl || state.filePreviewUrl,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface ImageUploadProps extends React.PropsWithChildren {\r\n  id: string;\r\n  errorText?: string;\r\n  center?: boolean;\r\n  onInput: (id: string, file: File | undefined, isValid: boolean) => void;\r\n}\r\n\r\nfunction ImageUpload(props: ImageUploadProps): React.ReactElement {\r\n  const [filePickerState, dispatchFilePicker] = useReducer(filePickerReducer, {\r\n    file: undefined,\r\n    filePreviewUrl: null,\r\n    isValid: false,\r\n  });\r\n  const filePickerRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (filePickerState.file) {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        dispatchFilePicker({\r\n          type: \"PREVIEW_FILE\",\r\n          filePreviewUrl: fileReader.result,\r\n        });\r\n      };\r\n      fileReader.readAsDataURL(filePickerState.file);\r\n    }\r\n  }, [filePickerState.file]);\r\n\r\n  function pickImageHandler(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    let pickedFile;\r\n    let fileIsValid = filePickerState.isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      dispatchFilePicker({\r\n        type: \"INPUT_CHANGE\",\r\n        file: pickedFile,\r\n        isValid: true,\r\n      });\r\n      fileIsValid = true;\r\n    } else {\r\n      dispatchFilePicker({\r\n        type: \"INPUT_CHANGE\",\r\n        file: undefined,\r\n        isValid: false,\r\n      });\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  }\r\n\r\n  function pickButtonHandler(): void {\r\n    filePickerRef.current?.click();\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles[\"form-control\"]}`}>\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".png, .jpg, .jpeg\"\r\n        onChange={pickImageHandler}\r\n      />\r\n      <div\r\n        className={`${styles[\"image-upload\"]} ${\r\n          props.center ? styles.center : \"\"\r\n        }`}\r\n      >\r\n        <div className={`${styles[\"image-upload__preview\"]}`}>\r\n          {filePickerState.filePreviewUrl && (\r\n            <img\r\n              src={filePickerState.filePreviewUrl.toString()}\r\n              alt=\"Preview\"\r\n            />\r\n          )}\r\n          {!filePickerState.filePreviewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickButtonHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n        {!filePickerState.isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"Input_form-control__4leYh\",\"form-control--invalid\":\"Input_form-control--invalid__JOT1a\"};","import React, { useEffect, useReducer } from \"react\";\r\n\r\nimport validate, { ValidatorType } from \"../../utils/validators\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nfunction inputReducer(\r\n  state: {\r\n    step: number;\r\n    value: string;\r\n    isValid: boolean;\r\n    isTouched: boolean;\r\n  },\r\n  action: {\r\n    type: string;\r\n    step?: number;\r\n    value?: string;\r\n    validators?: { type: ValidatorType; value: string }[];\r\n  }\r\n) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        step: action.step || state.step,\r\n        value: action.value || \"\",\r\n        isValid: validate(action.value || \"\", action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface InputProps {\r\n  id: string;\r\n  type: string;\r\n  label: string;\r\n  errorText: string;\r\n  initialValid?: boolean;\r\n  initialValue?: string | number;\r\n  validators?: { type: ValidatorType; value: string }[];\r\n  rows?: number;\r\n  min?: number;\r\n  max?: number;\r\n  placeholder?: string;\r\n  onInput?: (a: string, b: string, c: boolean) => void;\r\n}\r\n\r\nfunction Input(props: InputProps): React.ReactElement {\r\n  const [inputState, dispatchInputState] = useReducer(inputReducer, {\r\n    step: 1,\r\n    value: props.initialValue?.toString() || \"\",\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (onInput) {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  function changeHandler(\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ): void {\r\n    if (event.target.type === \"number\") {\r\n      let inputStepValue = 1;\r\n      if (Number.isInteger(parseFloat(event.target.value))) {\r\n        inputStepValue = 1;\r\n      } else if (event.target.value.trim().length !== 0) {\r\n        const decimalPlaces = (event.target.value.split(\".\")[1] || \"\").length;\r\n        inputStepValue = parseFloat(`0.${\"0\".repeat(decimalPlaces - 1)}1`);\r\n      }\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        step: inputStepValue,\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    } else {\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    }\r\n  }\r\n\r\n  function touchHandler(): void {\r\n    dispatchInputState({\r\n      type: \"TOUCH\",\r\n    });\r\n  }\r\n\r\n  const inputElement =\r\n    props.type === \"textarea\" ? (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        min={props.min}\r\n        max={props.max}\r\n        step={props.type === \"number\" ? inputState.step : undefined}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`${styles[\"form-control\"]} ${\r\n        !inputState.isValid && inputState.isTouched\r\n          ? styles[\"form-control--invalid\"]\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {inputElement}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\ntype InitialInputs = {\r\n  [key: string]: {\r\n    value: string | File | null;\r\n    isValid: boolean;\r\n  };\r\n};\r\n\r\ntype FormReducerState = {\r\n  inputs: InitialInputs;\r\n  isValid: boolean;\r\n};\r\n\r\ntype FormReducerAction = {\r\n  type: string;\r\n  isValid: boolean;\r\n  value?: string | File;\r\n  inputId?: string;\r\n  inputs?: InitialInputs;\r\n};\r\n\r\ntype InputHandlerFunction = (\r\n  id: string,\r\n  value: string | File | undefined,\r\n  isValid: boolean\r\n) => void;\r\n\r\ntype SetFormDataFunction = (\r\n  inputData: InitialInputs,\r\n  formValidity: boolean\r\n) => void;\r\n\r\nfunction formReducer(state: FormReducerState, action: FormReducerAction) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      if (action.inputId) {\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: {\r\n              value: action.value ?? state.inputs[action.inputId].value,\r\n              isValid: action.isValid,\r\n            },\r\n          },\r\n          isValid: formIsValid,\r\n        };\r\n      }\r\n      break;\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs || state.inputs,\r\n        isValid: action.isValid || state.isValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\n\r\nexport function useForm(\r\n  initialInputs: InitialInputs,\r\n  initialFormValidity?: boolean\r\n): [FormReducerState, InputHandlerFunction, SetFormDataFunction] {\r\n  const [formState, dispatchFormState] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity || false,\r\n  });\r\n\r\n  const inputHandler: InputHandlerFunction = useCallback(\r\n    (id, value, isValid) => {\r\n      dispatchFormState({\r\n        type: \"INPUT_CHANGE\",\r\n        inputId: id,\r\n        value: value,\r\n        isValid: isValid,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const setFormData: SetFormDataFunction = useCallback(\r\n    (inputData, formValidity) => {\r\n      dispatchFormState({\r\n        type: \"SET_DATA\",\r\n        inputs: inputData,\r\n        isValid: formValidity,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","export enum ValidatorType {\r\n  REQUIRE = \"REQUIRE\",\r\n  NUMBER = \"NUMBER\",\r\n  MIN_LENGTH = \"MIN_LENGTH\",\r\n  MAX_LENGTH = \"MAX_lENGTH\",\r\n  MIN = \"MIN\",\r\n  MAX = \"MAX\",\r\n  EMAIL = \"EMAIL\",\r\n  FILE = \"FILE\",\r\n}\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({\r\n  type: ValidatorType.REQUIRE,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_NUMBER = () => ({\r\n  type: ValidatorType.NUMBER,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_MIN_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MIN_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MAX_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MIN = (value: string | number) => ({\r\n  type: ValidatorType.MIN,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX = (value: string | number) => ({\r\n  type: ValidatorType.MAX,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_EMAIL = () => ({ type: ValidatorType.EMAIL, value: \"\" });\r\nexport const VALIDATOR_FILE = () => ({ type: ValidatorType.FILE, value: \"\" });\r\n\r\nexport default function validate(\r\n  value: string,\r\n  validators?: { type: ValidatorType; value: string | number }[]\r\n): boolean {\r\n  let isValid = true;\r\n  if (validators) {\r\n    for (const validator of validators) {\r\n      if (validator.type === ValidatorType.REQUIRE) {\r\n        isValid = isValid && value.trim().length > 0;\r\n      }\r\n      if (validator.type === ValidatorType.NUMBER) {\r\n        isValid = isValid && typeof +value.trim() === \"number\";\r\n      }\r\n      if (validator.type === ValidatorType.MIN_LENGTH) {\r\n        isValid = isValid && value.trim().length >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX_LENGTH) {\r\n        isValid = isValid && value.trim().length <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MIN) {\r\n        isValid = isValid && +value >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX) {\r\n        isValid = isValid && +value <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.EMAIL) {\r\n        isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n      }\r\n    }\r\n  }\r\n  return isValid;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"place-form\":\"PlaceForm_place-form__PS6qS\"};"],"names":["authCtx","useContext","AuthContext","navigate","useNavigate","error","isLoading","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","image","value","isValid","title","description","address","latitude","longitude","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","LoadingSpinner","asOverlay","className","concat","styles","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","url","process","method","headers","Authorization","token","body","console","log","ImageUpload","id","center","onInput","errorText","Input","label","type","validators","VALIDATOR_REQUIRE","VALIDATOR_MIN_LENGTH","min","max","VALIDATOR_NUMBER","VALIDATOR_MIN","VALIDATOR_MAX","Button","disabled","filePickerReducer","state","action","file","filePreviewUrl","props","filePickerState","dispatchFilePicker","useReducer","undefined","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","src","toString","alt","onClick","_filePickerRef$curren","current","click","inputReducer","step","validate","isTouched","_props$initialValue","inputState","dispatchInputState","initialValue","initialValid","changeHandler","inputStepValue","Number","isInteger","parseFloat","trim","decimalPlaces","split","repeat","touchHandler","inputElement","rows","placeholder","onBlur","htmlFor","formReducer","formIsValid","inputId","_action$value","initialInputs","initialFormValidity","dispatchFormState","useCallback","inputData","formValidity","ValidatorType","REQUIRE","NUMBER","MIN_LENGTH","MIN","MAX","VALIDATOR_EMAIL","EMAIL","validator","MAX_LENGTH","test"],"sourceRoot":""}