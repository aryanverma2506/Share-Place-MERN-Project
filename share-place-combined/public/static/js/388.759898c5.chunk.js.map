{"version":3,"file":"static/js/388.759898c5.chunk.js","mappings":"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","sources":["places/screens/UpdatePlace.tsx","webpack://client/./src/shared/components/FormElements/Input.module.css?800c","shared/components/FormElements/Input.tsx","webpack://client/./src/shared/components/UIElements/Card.module.css?5bd3","shared/components/UIElements/Card.tsx","shared/hooks/useForm-hook.ts","shared/utils/validators.ts","webpack://client/./src/places/screens/PlaceForm.module.css?b34f"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MIN_LENGTH,\r\n} from \"../../shared/utils/validators\";\r\nimport {\r\n  AuthContextType,\r\n  AuthContext,\r\n} from \"../../shared/context/auth/auth-context\";\r\nimport { useForm } from \"../../shared/hooks/useForm-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient-hook\";\r\nimport styles from \"./PlaceForm.module.css\";\r\n\r\nimport { PlaceModel } from \"../models/place.model\";\r\n\r\ninterface ResponseData {\r\n  place: PlaceModel;\r\n}\r\n\r\nfunction UpdatePlace(): React.ReactElement {\r\n  const navigate = useNavigate();\r\n  const placeId = useParams().placeId;\r\n  const authCtx = useContext<AuthContextType>(AuthContext);\r\n  const [loadedPlace, setLoadedPlace] = useState<PlaceModel>();\r\n  const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function fetchPlace(): Promise<void> {\r\n      try {\r\n        const responseData = await sendRequest<ResponseData>({\r\n          url: `${process.env.REACT_APP_SERVER_URL}/places/${placeId}`,\r\n        });\r\n        if (responseData.place) {\r\n          setLoadedPlace(() => responseData.place);\r\n          setFormData(\r\n            {\r\n              title: {\r\n                value: responseData.place.title,\r\n                isValid: true,\r\n              },\r\n              description: {\r\n                value: responseData.place.description,\r\n                isValid: true,\r\n              },\r\n            },\r\n            true\r\n          );\r\n        }\r\n      } catch (error: any) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    fetchPlace();\r\n  }, [placeId, sendRequest, setFormData]);\r\n\r\n  async function placeSubmitHandler(\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ): Promise<void> {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest({\r\n        url: `${process.env.REACT_APP_SERVER_URL}/places/${placeId}`,\r\n        method: \"PATCH\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + authCtx.token,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n      });\r\n      navigate(`/${authCtx.userId}/places`);\r\n    } catch (error: any) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlace && (\r\n        <form\r\n          className={`${styles[\"place-form\"]}`}\r\n          onSubmit={placeSubmitHandler}\r\n        >\r\n          <Input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            onInput={inputHandler}\r\n            initialValid={formState.inputs.title.isValid}\r\n            initialValue={formState.inputs.title.value?.toString()}\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            type=\"textarea\"\r\n            label=\"Description\"\r\n            onInput={inputHandler}\r\n            initialValid={formState.inputs.description.isValid}\r\n            initialValue={formState.inputs.description.value?.toString()}\r\n            validators={[VALIDATOR_MIN_LENGTH(5)]}\r\n            errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdatePlace;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"Input_form-control__4leYh\",\"form-control--invalid\":\"Input_form-control--invalid__JOT1a\"};","import React, { useEffect, useReducer } from \"react\";\r\n\r\nimport validate, { ValidatorType } from \"../../utils/validators\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nfunction inputReducer(\r\n  state: {\r\n    step: number;\r\n    value: string;\r\n    isValid: boolean;\r\n    isTouched: boolean;\r\n  },\r\n  action: {\r\n    type: string;\r\n    step?: number;\r\n    value?: string;\r\n    validators?: { type: ValidatorType; value: string }[];\r\n  }\r\n) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        step: action.step || state.step,\r\n        value: action.value || \"\",\r\n        isValid: validate(action.value || \"\", action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface InputProps {\r\n  id: string;\r\n  type: string;\r\n  label: string;\r\n  errorText: string;\r\n  initialValid?: boolean;\r\n  initialValue?: string | number;\r\n  validators?: { type: ValidatorType; value: string }[];\r\n  rows?: number;\r\n  min?: number;\r\n  max?: number;\r\n  placeholder?: string;\r\n  onInput?: (a: string, b: string, c: boolean) => void;\r\n}\r\n\r\nfunction Input(props: InputProps): React.ReactElement {\r\n  const [inputState, dispatchInputState] = useReducer(inputReducer, {\r\n    step: 1,\r\n    value: props.initialValue?.toString() || \"\",\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (onInput) {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  function changeHandler(\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ): void {\r\n    if (event.target.type === \"number\") {\r\n      let inputStepValue = 1;\r\n      if (Number.isInteger(parseFloat(event.target.value))) {\r\n        inputStepValue = 1;\r\n      } else if (event.target.value.trim().length !== 0) {\r\n        const decimalPlaces = (event.target.value.split(\".\")[1] || \"\").length;\r\n        inputStepValue = parseFloat(`0.${\"0\".repeat(decimalPlaces - 1)}1`);\r\n      }\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        step: inputStepValue,\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    } else {\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    }\r\n  }\r\n\r\n  function touchHandler(): void {\r\n    dispatchInputState({\r\n      type: \"TOUCH\",\r\n    });\r\n  }\r\n\r\n  const inputElement =\r\n    props.type === \"textarea\" ? (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        min={props.min}\r\n        max={props.max}\r\n        step={props.type === \"number\" ? inputState.step : undefined}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`${styles[\"form-control\"]} ${\r\n        !inputState.isValid && inputState.isTouched\r\n          ? styles[\"form-control--invalid\"]\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {inputElement}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__1-V8Z\"};","import React from \"react\";\r\n\r\nimport styles from \"./Card.module.css\";\r\n\r\ninterface CardProps extends React.PropsWithChildren {\r\n  className?: string;\r\n  style?: Object;\r\n}\r\n\r\nfunction Card(props: CardProps): React.ReactElement {\r\n  return (\r\n    <div className={`${styles.card} ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\ntype InitialInputs = {\r\n  [key: string]: {\r\n    value: string | File | null;\r\n    isValid: boolean;\r\n  };\r\n};\r\n\r\ntype FormReducerState = {\r\n  inputs: InitialInputs;\r\n  isValid: boolean;\r\n};\r\n\r\ntype FormReducerAction = {\r\n  type: string;\r\n  isValid: boolean;\r\n  value?: string | File;\r\n  inputId?: string;\r\n  inputs?: InitialInputs;\r\n};\r\n\r\ntype InputHandlerFunction = (\r\n  id: string,\r\n  value: string | File | undefined,\r\n  isValid: boolean\r\n) => void;\r\n\r\ntype SetFormDataFunction = (\r\n  inputData: InitialInputs,\r\n  formValidity: boolean\r\n) => void;\r\n\r\nfunction formReducer(state: FormReducerState, action: FormReducerAction) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      if (action.inputId) {\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: {\r\n              value: action.value ?? state.inputs[action.inputId].value,\r\n              isValid: action.isValid,\r\n            },\r\n          },\r\n          isValid: formIsValid,\r\n        };\r\n      }\r\n      break;\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs || state.inputs,\r\n        isValid: action.isValid || state.isValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\n\r\nexport function useForm(\r\n  initialInputs: InitialInputs,\r\n  initialFormValidity?: boolean\r\n): [FormReducerState, InputHandlerFunction, SetFormDataFunction] {\r\n  const [formState, dispatchFormState] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity || false,\r\n  });\r\n\r\n  const inputHandler: InputHandlerFunction = useCallback(\r\n    (id, value, isValid) => {\r\n      dispatchFormState({\r\n        type: \"INPUT_CHANGE\",\r\n        inputId: id,\r\n        value: value,\r\n        isValid: isValid,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const setFormData: SetFormDataFunction = useCallback(\r\n    (inputData, formValidity) => {\r\n      dispatchFormState({\r\n        type: \"SET_DATA\",\r\n        inputs: inputData,\r\n        isValid: formValidity,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","export enum ValidatorType {\r\n  REQUIRE = \"REQUIRE\",\r\n  NUMBER = \"NUMBER\",\r\n  MIN_LENGTH = \"MIN_LENGTH\",\r\n  MAX_LENGTH = \"MAX_lENGTH\",\r\n  MIN = \"MIN\",\r\n  MAX = \"MAX\",\r\n  EMAIL = \"EMAIL\",\r\n  FILE = \"FILE\",\r\n}\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({\r\n  type: ValidatorType.REQUIRE,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_NUMBER = () => ({\r\n  type: ValidatorType.NUMBER,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_MIN_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MIN_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MAX_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MIN = (value: string | number) => ({\r\n  type: ValidatorType.MIN,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX = (value: string | number) => ({\r\n  type: ValidatorType.MAX,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_EMAIL = () => ({ type: ValidatorType.EMAIL, value: \"\" });\r\nexport const VALIDATOR_FILE = () => ({ type: ValidatorType.FILE, value: \"\" });\r\n\r\nexport default function validate(\r\n  value: string,\r\n  validators?: { type: ValidatorType; value: string | number }[]\r\n): boolean {\r\n  let isValid = true;\r\n  if (validators) {\r\n    for (const validator of validators) {\r\n      if (validator.type === ValidatorType.REQUIRE) {\r\n        isValid = isValid && value.trim().length > 0;\r\n      }\r\n      if (validator.type === ValidatorType.NUMBER) {\r\n        isValid = isValid && typeof +value.trim() === \"number\";\r\n      }\r\n      if (validator.type === ValidatorType.MIN_LENGTH) {\r\n        isValid = isValid && value.trim().length >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX_LENGTH) {\r\n        isValid = isValid && value.trim().length <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MIN) {\r\n        isValid = isValid && +value >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX) {\r\n        isValid = isValid && +value <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.EMAIL) {\r\n        isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n      }\r\n    }\r\n  }\r\n  return isValid;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"place-form\":\"PlaceForm_place-form__PS6qS\"};"],"names":["_formState$inputs$tit","_formState$inputs$des","navigate","useNavigate","placeId","useParams","authCtx","useContext","AuthContext","loadedPlace","setLoadedPlace","useState","error","isLoading","sendRequest","clearError","useHttpClient","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","responseData","url","concat","process","place","console","log","fetchPlace","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","LoadingSpinner","asOverlay","styles","onSubmit","event","preventDefault","method","headers","Authorization","token","body","JSON","stringify","inputs","userId","Input","id","type","label","onInput","initialValid","initialValue","toString","validators","VALIDATOR_REQUIRE","errorText","VALIDATOR_MIN_LENGTH","Button","disabled","Card","inputReducer","state","action","step","validate","isTouched","props","_props$initialValue","inputState","dispatchInputState","useReducer","changeHandler","target","inputStepValue","Number","isInteger","parseFloat","trim","length","decimalPlaces","split","repeat","touchHandler","inputElement","rows","placeholder","onChange","onBlur","min","max","undefined","htmlFor","style","formReducer","formIsValid","inputId","_action$value","initialInputs","initialFormValidity","dispatchFormState","useCallback","inputData","formValidity","ValidatorType","REQUIRE","VALIDATOR_NUMBER","NUMBER","MIN_LENGTH","VALIDATOR_MIN","MIN","VALIDATOR_MAX","MAX","VALIDATOR_EMAIL","EMAIL","validator","MAX_LENGTH","test"],"sourceRoot":""}