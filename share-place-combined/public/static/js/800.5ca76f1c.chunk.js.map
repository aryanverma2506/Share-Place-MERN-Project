{"version":3,"file":"static/js/800.5ca76f1c.chunk.js","mappings":"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","sources":["webpack://client/./src/shared/components/FormElements/ImageUpload.module.css?d18b","shared/components/FormElements/ImageUpload.tsx","webpack://client/./src/shared/components/FormElements/Input.module.css?800c","shared/components/FormElements/Input.tsx","webpack://client/./src/shared/components/UIElements/Card.module.css?5bd3","shared/components/UIElements/Card.tsx","shared/hooks/useForm-hook.ts","shared/utils/validators.ts","webpack://client/./src/user/screens/Auth.module.css?67f8","user/screens/Auth.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"ImageUpload_form-control__S+NdZ\",\"image-upload\":\"ImageUpload_image-upload__CzPQI\",\"center\":\"ImageUpload_center__jXDTo\",\"image-upload__preview\":\"ImageUpload_image-upload__preview__+ww3b\"};","import React, { useEffect, useReducer, useRef } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport styles from \"./ImageUpload.module.css\";\r\n\r\ntype FileReducerState = {\r\n  file: File | undefined;\r\n  filePreviewUrl: string | ArrayBuffer | null;\r\n  isValid: boolean;\r\n};\r\n\r\ntype FileReducerAction = {\r\n  type: string;\r\n  file?: File | undefined;\r\n  filePreviewUrl?: string | ArrayBuffer | null;\r\n  isValid?: boolean;\r\n};\r\n\r\nfunction filePickerReducer(state: FileReducerState, action: FileReducerAction) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      return {\r\n        ...state,\r\n        file: action.file || state.file,\r\n        isValid: action.isValid || state.isValid,\r\n      };\r\n    case \"PREVIEW_FILE\":\r\n      return {\r\n        ...state,\r\n        filePreviewUrl: action.filePreviewUrl || state.filePreviewUrl,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface ImageUploadProps extends React.PropsWithChildren {\r\n  id: string;\r\n  errorText?: string;\r\n  center?: boolean;\r\n  onInput: (id: string, file: File | undefined, isValid: boolean) => void;\r\n}\r\n\r\nfunction ImageUpload(props: ImageUploadProps): React.ReactElement {\r\n  const [filePickerState, dispatchFilePicker] = useReducer(filePickerReducer, {\r\n    file: undefined,\r\n    filePreviewUrl: null,\r\n    isValid: false,\r\n  });\r\n  const filePickerRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (filePickerState.file) {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        dispatchFilePicker({\r\n          type: \"PREVIEW_FILE\",\r\n          filePreviewUrl: fileReader.result,\r\n        });\r\n      };\r\n      fileReader.readAsDataURL(filePickerState.file);\r\n    }\r\n  }, [filePickerState.file]);\r\n\r\n  function pickImageHandler(event: React.ChangeEvent<HTMLInputElement>): void {\r\n    let pickedFile;\r\n    let fileIsValid = filePickerState.isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      dispatchFilePicker({\r\n        type: \"INPUT_CHANGE\",\r\n        file: pickedFile,\r\n        isValid: true,\r\n      });\r\n      fileIsValid = true;\r\n    } else {\r\n      dispatchFilePicker({\r\n        type: \"INPUT_CHANGE\",\r\n        file: undefined,\r\n        isValid: false,\r\n      });\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  }\r\n\r\n  function pickButtonHandler(): void {\r\n    filePickerRef.current?.click();\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles[\"form-control\"]}`}>\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".png, .jpg, .jpeg\"\r\n        onChange={pickImageHandler}\r\n      />\r\n      <div\r\n        className={`${styles[\"image-upload\"]} ${\r\n          props.center ? styles.center : \"\"\r\n        }`}\r\n      >\r\n        <div className={`${styles[\"image-upload__preview\"]}`}>\r\n          {filePickerState.filePreviewUrl && (\r\n            <img\r\n              src={filePickerState.filePreviewUrl.toString()}\r\n              alt=\"Preview\"\r\n            />\r\n          )}\r\n          {!filePickerState.filePreviewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickButtonHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n        {!filePickerState.isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"Input_form-control__4leYh\",\"form-control--invalid\":\"Input_form-control--invalid__JOT1a\"};","import React, { useEffect, useReducer } from \"react\";\r\n\r\nimport validate, { ValidatorType } from \"../../utils/validators\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nfunction inputReducer(\r\n  state: {\r\n    step: number;\r\n    value: string;\r\n    isValid: boolean;\r\n    isTouched: boolean;\r\n  },\r\n  action: {\r\n    type: string;\r\n    step?: number;\r\n    value?: string;\r\n    validators?: { type: ValidatorType; value: string }[];\r\n  }\r\n) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        step: action.step || state.step,\r\n        value: action.value || \"\",\r\n        isValid: validate(action.value || \"\", action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ninterface InputProps {\r\n  id: string;\r\n  type: string;\r\n  label: string;\r\n  errorText: string;\r\n  initialValid?: boolean;\r\n  initialValue?: string | number;\r\n  validators?: { type: ValidatorType; value: string }[];\r\n  rows?: number;\r\n  min?: number;\r\n  max?: number;\r\n  placeholder?: string;\r\n  onInput?: (a: string, b: string, c: boolean) => void;\r\n}\r\n\r\nfunction Input(props: InputProps): React.ReactElement {\r\n  const [inputState, dispatchInputState] = useReducer(inputReducer, {\r\n    step: 1,\r\n    value: props.initialValue?.toString() || \"\",\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (onInput) {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  function changeHandler(\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ): void {\r\n    if (event.target.type === \"number\") {\r\n      let inputStepValue = 1;\r\n      if (Number.isInteger(parseFloat(event.target.value))) {\r\n        inputStepValue = 1;\r\n      } else if (event.target.value.trim().length !== 0) {\r\n        const decimalPlaces = (event.target.value.split(\".\")[1] || \"\").length;\r\n        inputStepValue = parseFloat(`0.${\"0\".repeat(decimalPlaces - 1)}1`);\r\n      }\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        step: inputStepValue,\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    } else {\r\n      dispatchInputState({\r\n        type: \"CHANGE\",\r\n        value: event.target.value,\r\n        validators: props.validators,\r\n      });\r\n    }\r\n  }\r\n\r\n  function touchHandler(): void {\r\n    dispatchInputState({\r\n      type: \"TOUCH\",\r\n    });\r\n  }\r\n\r\n  const inputElement =\r\n    props.type === \"textarea\" ? (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        min={props.min}\r\n        max={props.max}\r\n        step={props.type === \"number\" ? inputState.step : undefined}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`${styles[\"form-control\"]} ${\r\n        !inputState.isValid && inputState.isTouched\r\n          ? styles[\"form-control--invalid\"]\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {inputElement}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__1-V8Z\"};","import React from \"react\";\r\n\r\nimport styles from \"./Card.module.css\";\r\n\r\ninterface CardProps extends React.PropsWithChildren {\r\n  className?: string;\r\n  style?: Object;\r\n}\r\n\r\nfunction Card(props: CardProps): React.ReactElement {\r\n  return (\r\n    <div className={`${styles.card} ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\ntype InitialInputs = {\r\n  [key: string]: {\r\n    value: string | File | null;\r\n    isValid: boolean;\r\n  };\r\n};\r\n\r\ntype FormReducerState = {\r\n  inputs: InitialInputs;\r\n  isValid: boolean;\r\n};\r\n\r\ntype FormReducerAction = {\r\n  type: string;\r\n  isValid: boolean;\r\n  value?: string | File;\r\n  inputId?: string;\r\n  inputs?: InitialInputs;\r\n};\r\n\r\ntype InputHandlerFunction = (\r\n  id: string,\r\n  value: string | File | undefined,\r\n  isValid: boolean\r\n) => void;\r\n\r\ntype SetFormDataFunction = (\r\n  inputData: InitialInputs,\r\n  formValidity: boolean\r\n) => void;\r\n\r\nfunction formReducer(state: FormReducerState, action: FormReducerAction) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      if (action.inputId) {\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: {\r\n              value: action.value ?? state.inputs[action.inputId].value,\r\n              isValid: action.isValid,\r\n            },\r\n          },\r\n          isValid: formIsValid,\r\n        };\r\n      }\r\n      break;\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs || state.inputs,\r\n        isValid: action.isValid || state.isValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\n\r\nexport function useForm(\r\n  initialInputs: InitialInputs,\r\n  initialFormValidity?: boolean\r\n): [FormReducerState, InputHandlerFunction, SetFormDataFunction] {\r\n  const [formState, dispatchFormState] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity || false,\r\n  });\r\n\r\n  const inputHandler: InputHandlerFunction = useCallback(\r\n    (id, value, isValid) => {\r\n      dispatchFormState({\r\n        type: \"INPUT_CHANGE\",\r\n        inputId: id,\r\n        value: value,\r\n        isValid: isValid,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  const setFormData: SetFormDataFunction = useCallback(\r\n    (inputData, formValidity) => {\r\n      dispatchFormState({\r\n        type: \"SET_DATA\",\r\n        inputs: inputData,\r\n        isValid: formValidity,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","export enum ValidatorType {\r\n  REQUIRE = \"REQUIRE\",\r\n  NUMBER = \"NUMBER\",\r\n  MIN_LENGTH = \"MIN_LENGTH\",\r\n  MAX_LENGTH = \"MAX_lENGTH\",\r\n  MIN = \"MIN\",\r\n  MAX = \"MAX\",\r\n  EMAIL = \"EMAIL\",\r\n  FILE = \"FILE\",\r\n}\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({\r\n  type: ValidatorType.REQUIRE,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_NUMBER = () => ({\r\n  type: ValidatorType.NUMBER,\r\n  value: \"\",\r\n});\r\nexport const VALIDATOR_MIN_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MIN_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX_LENGTH = (value: string | number) => ({\r\n  type: ValidatorType.MAX_LENGTH,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MIN = (value: string | number) => ({\r\n  type: ValidatorType.MIN,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_MAX = (value: string | number) => ({\r\n  type: ValidatorType.MAX,\r\n  value: value.toString(),\r\n});\r\nexport const VALIDATOR_EMAIL = () => ({ type: ValidatorType.EMAIL, value: \"\" });\r\nexport const VALIDATOR_FILE = () => ({ type: ValidatorType.FILE, value: \"\" });\r\n\r\nexport default function validate(\r\n  value: string,\r\n  validators?: { type: ValidatorType; value: string | number }[]\r\n): boolean {\r\n  let isValid = true;\r\n  if (validators) {\r\n    for (const validator of validators) {\r\n      if (validator.type === ValidatorType.REQUIRE) {\r\n        isValid = isValid && value.trim().length > 0;\r\n      }\r\n      if (validator.type === ValidatorType.NUMBER) {\r\n        isValid = isValid && typeof +value.trim() === \"number\";\r\n      }\r\n      if (validator.type === ValidatorType.MIN_LENGTH) {\r\n        isValid = isValid && value.trim().length >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX_LENGTH) {\r\n        isValid = isValid && value.trim().length <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MIN) {\r\n        isValid = isValid && +value >= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.MAX) {\r\n        isValid = isValid && +value <= +validator.value;\r\n      }\r\n      if (validator.type === ValidatorType.EMAIL) {\r\n        isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n      }\r\n    }\r\n  }\r\n  return isValid;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"authentication__header\":\"Auth_authentication__header__TVYMj\",\"authentication\":\"Auth_authentication__9Qqdi\"};","import React, { useContext, useState } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useForm } from \"../../shared/hooks/useForm-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MIN_LENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport {\r\n  AuthContext,\r\n  AuthContextType,\r\n} from \"../../shared/context/auth/auth-context\";\r\nimport styles from \"./Auth.module.css\";\r\n\r\ninterface ResponseUserData {\r\n  userId: string;\r\n  email: string;\r\n  token: string;\r\n}\r\n\r\nfunction Auth(): React.ReactElement {\r\n  const [isLoginMode, setIsLoginMode] = useState<boolean>(true);\r\n  const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n  const authCtx = useContext<AuthContextType>(AuthContext);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  function switchModeHandler(): void {\r\n    if (!isLoginMode) {\r\n      delete formState.inputs.image;\r\n      delete formState.inputs.name;\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevState) => !prevState);\r\n  }\r\n\r\n  async function authSubmitHandler(\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ): Promise<void> {\r\n    event.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest<ResponseUserData>({\r\n          url: `${process.env.REACT_APP_SERVER_URL}/users/login`,\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n        });\r\n\r\n        authCtx.login(responseData.userId, responseData.token, undefined);\r\n      } catch (error: any) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formState.inputs.name.value!);\r\n        formData.append(\"email\", formState.inputs.email.value!);\r\n        formData.append(\"password\", formState.inputs.password.value!);\r\n        formData.append(\"image\", formState.inputs.image.value!);\r\n        const responseData = await sendRequest<ResponseUserData>({\r\n          url: `${process.env.REACT_APP_SERVER_URL}/users/signup`,\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        authCtx.login(responseData.userId, responseData.token, undefined);\r\n      } catch (error: any) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className={`${styles.authentication}`}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <>\r\n              <ImageUpload\r\n                id=\"image\"\r\n                center\r\n                onInput={inputHandler}\r\n                errorText=\"Please provide an image\"\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                label=\"Your Name\"\r\n                placeholder=\"Your Name\"\r\n                onInput={inputHandler}\r\n                errorText=\"Please enter a name.\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n              />\r\n            </>\r\n          )}\r\n          <Input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            label=\"E-mail\"\r\n            placeholder=\"E-mail\"\r\n            initialValue={formState.inputs.email.value?.toString()}\r\n            onInput={inputHandler}\r\n            errorText=\"Please enter a valid e-mail address.\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            initialValue={formState.inputs.password.value?.toString()}\r\n            onInput={inputHandler}\r\n            placeholder=\"Password\"\r\n            errorText=\"Please enter a valid password, at least 8 characters.\"\r\n            validators={[VALIDATOR_MIN_LENGTH(8)]}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGN UP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGN UP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"names":["filePickerReducer","state","action","type","file","isValid","filePreviewUrl","props","filePickerState","dispatchFilePicker","useReducer","undefined","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","className","concat","styles","children","_jsx","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","toString","alt","Button","onClick","_filePickerRef$curren","current","click","errorText","inputReducer","step","value","validate","validators","isTouched","_props$initialValue","inputState","dispatchInputState","initialValue","initialValid","changeHandler","inputStepValue","Number","isInteger","parseFloat","trim","decimalPlaces","split","repeat","touchHandler","inputElement","rows","placeholder","onBlur","min","max","htmlFor","label","formReducer","formIsValid","inputId","inputs","_action$value","useForm","initialInputs","initialFormValidity","formState","dispatchFormState","useCallback","inputData","formValidity","ValidatorType","VALIDATOR_REQUIRE","REQUIRE","VALIDATOR_NUMBER","NUMBER","VALIDATOR_MIN_LENGTH","MIN_LENGTH","VALIDATOR_MIN","MIN","VALIDATOR_MAX","MAX","VALIDATOR_EMAIL","EMAIL","validator","MAX_LENGTH","test","_formState$inputs$ema","_formState$inputs$pas","isLoginMode","setIsLoginMode","useState","error","isLoading","sendRequest","clearError","useHttpClient","authCtx","useContext","AuthContext","inputHandler","setFormData","email","password","_Fragment","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","async","preventDefault","responseData","url","process","method","headers","body","JSON","stringify","login","userId","token","console","log","formData","FormData","append","name","image","ImageUpload","Input","disabled","inverse","prevState"],"sourceRoot":""}