{"version":3,"file":"static/js/742.c7b8ecb7.chunk.js","mappings":"qHACA,QAAuB,mB,aCgBvB,QARA,SAAcA,GACZ,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAW,KAAAD,OAAIH,EAAME,WAAaG,MAAOL,EAAMK,MAAMC,SACrEN,EAAMM,UAGb,C,mFCdA,QAAyB,uB,aCuBzB,QAZA,SAAgBN,GACd,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAa,KAAAD,OAAIH,EAAME,WAAaG,MAAOL,EAAMK,MAAMC,UACxEL,EAAAA,EAAAA,KAAA,OACEM,IAAKP,EAAMQ,MACXC,IAAKT,EAAMS,IACXJ,MAAO,CAAEK,MAAOV,EAAMU,MAAOC,OAAQX,EAAMU,UAInD,E,YCrBA,QAA4B,4BAA5B,EAA6E,qCAA7E,EAAqI,mCAArI,EAA0L,kCCoC1L,QAvBA,SAAkBV,GAChB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAS,GAAAC,OAAKC,GAAsBE,UACtCL,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACV,UAAS,GAAAC,OAAKC,GAA+BE,UACjDO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,IAAAZ,OAAMH,EAAMgB,GAAE,WAAUV,SAAA,EAC9BL,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAAC,OAAKC,GAA6BE,UAC9CL,EAAAA,EAAAA,KAACgB,EAAM,CACLT,MAAK,GAAAL,OAAKe,wBAA+B,KAAAf,OAAIH,EAAMQ,OACnDC,IAAKT,EAAMmB,UAGfN,EAAAA,EAAAA,MAAA,OAAKX,UAAS,GAAAC,OAAKC,GAA4BE,SAAA,EAC7CL,EAAAA,EAAAA,KAAA,MAAAK,SAAKN,EAAMmB,QACXN,EAAAA,EAAAA,MAAA,MAAAP,SAAA,CACGN,EAAMoB,WAAW,IAAuB,IAArBpB,EAAMoB,WAAmB,QAAU,qBAOrE,EClCA,EAA6B,8BCqC7B,QA1BA,SAAkBpB,GAChB,OAA2B,IAAvBA,EAAMqB,MAAMC,QAEZrB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQI,UACrBL,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAAAN,UACHL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,yBAOVL,EAAAA,EAAAA,KAAA,MAAIC,UAAS,GAAAC,OAAKC,GAAuBE,SACtCN,EAAMqB,MAAME,KAAKC,IAChBvB,EAAAA,EAAAA,KAACwB,EAAQ,CAEPT,GAAIQ,EAAKR,GACTR,MAAOgB,EAAKhB,MACZW,KAAMK,EAAKL,KACXC,WAAYI,EAAKE,OAAOJ,QAJnBE,EAAKR,OASpB,E,aCSA,QAhCA,WACE,MAAM,MAAEW,EAAK,UAAEC,EAAS,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MAC/CC,EAAaC,IAAkBC,EAAAA,EAAAA,YAiBtC,OAfAC,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,QAAqBR,EAA8B,CACvDS,IAAI,GAADnC,OAAKe,4BAAgC,aAE1Ce,GAAe,IAAMI,EAAahB,OACpC,CAAE,MAAOM,GACPY,QAAQC,IAAIb,EACd,CACF,CAEAc,EAAY,GACX,CAACZ,KAGFhB,EAAAA,EAAAA,MAAA6B,EAAAA,SAAA,CAAApC,SAAA,EACEL,EAAAA,EAAAA,KAAC0C,EAAAA,EAAU,CAAChB,MAAOA,EAAOiB,QAASd,IAClCF,IACC3B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQI,UACrBL,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CAACC,WAAS,OAG3BlB,GAAaI,IAAe/B,EAAAA,EAAAA,KAAC8C,EAAS,CAAC1B,MAAOW,MAGtD,C","sources":["webpack://client/./src/shared/components/UIElements/Card.module.css?5bd3","shared/components/UIElements/Card.tsx","webpack://client/./src/shared/components/UIElements/Avatar.module.css?35e1","shared/components/UIElements/Avatar.tsx","webpack://client/./src/user/components/UserItem.module.css?58bf","user/components/UserItem.tsx","webpack://client/./src/user/components/UsersList.module.css?4838","user/components/UsersList.tsx","user/screens/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__1-V8Z\"};","import React from \"react\";\r\n\r\nimport styles from \"./Card.module.css\";\r\n\r\ninterface CardProps extends React.PropsWithChildren {\r\n  className?: string;\r\n  style?: Object;\r\n}\r\n\r\nfunction Card(props: CardProps): React.ReactElement {\r\n  return (\r\n    <div className={`${styles.card} ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Avatar_avatar__+AFF2\"};","import React from \"react\";\r\n\r\nimport styles from \"./Avatar.module.css\";\r\n\r\ninterface AvatarProps extends React.PropsWithChildren {\r\n  image: string;\r\n  alt: string;\r\n  className?: string;\r\n  style?: Object;\r\n  width?: string;\r\n}\r\n\r\nfunction Avatar(props: AvatarProps): React.ReactElement {\r\n  return (\r\n    <div className={`${styles.avatar} ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Avatar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user-item\":\"UserItem_user-item__D5bzO\",\"user-item__content\":\"UserItem_user-item__content__yU3MN\",\"user-item__image\":\"UserItem_user-item__image__Ugm0h\",\"user-item__info\":\"UserItem_user-item__info__aUsDE\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport styles from \"./UserItem.module.css\";\r\n\r\ninterface UserItemProps extends React.PropsWithChildren {\r\n  id: string | number;\r\n  image: string;\r\n  name: string;\r\n  placeCount: number;\r\n}\r\n\r\nfunction UserItem(props: UserItemProps): React.ReactElement {\r\n  return (\r\n    <li className={`${styles[\"user-item\"]}`}>\r\n      <Card className={`${styles[\"user-item__content\"]}`}>\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className={`${styles[\"user-item__image\"]}`}>\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className={`${styles[\"user-item__info\"]}`}>\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default UserItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"users-list\":\"UsersList_users-list__ovAtr\"};","import React from \"react\";\r\n\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport styles from \"./UsersList.module.css\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\ninterface UserListProps extends React.PropsWithChildren {\r\n  users: UserModel[] | [];\r\n}\r\n\r\nfunction UserList(props: UserListProps): React.ReactElement {\r\n  if (props.users.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className={`${styles[\"users-list\"]}`}>\r\n      {props.users.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttpClient-hook\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\ninterface ResponseUserData {\r\n  users: UserModel[];\r\n}\r\n\r\nfunction Users(): React.ReactElement {\r\n  const { error, isLoading, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState<UserModel[] | []>();\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers(): Promise<void> {\r\n      try {\r\n        const responseData = await sendRequest<ResponseUserData>({\r\n          url: `${process.env.REACT_APP_SERVER_URL}/users/`,\r\n        });\r\n        setLoadedUsers(() => responseData.users);\r\n      } catch (error: any) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList users={loadedUsers} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"names":["props","_jsx","className","concat","styles","style","children","src","image","alt","width","height","Card","_jsxs","Link","to","id","Avatar","process","name","placeCount","users","length","map","user","UserItem","places","error","isLoading","sendRequest","clearError","useHttpClient","loadedUsers","setLoadedUsers","useState","useEffect","async","responseData","url","console","log","fetchUsers","_Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay","UsersList"],"sourceRoot":""}